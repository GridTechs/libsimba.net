### YamlMime:ManagedReference
items:
- uid: libSimba.Net.Models.PagedResponse`1
  commentId: T:libSimba.Net.Models.PagedResponse`1
  id: PagedResponse`1
  parent: libSimba.Net.Models
  children:
  - libSimba.Net.Models.PagedResponse`1.#ctor(System.String,libSimba.Net.Simba.SimbaBase)
  - libSimba.Net.Models.PagedResponse`1.Count
  - libSimba.Net.Models.PagedResponse`1.CurrentPage
  - libSimba.Net.Models.PagedResponse`1.Data
  - libSimba.Net.Models.PagedResponse`1.Next(System.Threading.CancellationToken)
  - libSimba.Net.Models.PagedResponse`1.Previous(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PagedResponse<T>
  nameWithType: PagedResponse<T>
  fullName: libSimba.Net.Models.PagedResponse<T>
  type: Class
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: PagedResponse
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 16
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  summary: "\nEncapsulates a paged response from the API\n"
  example: []
  syntax:
    content: >-
      [JsonObject(MemberSerialization.OptIn)]

      public class PagedResponse<T> : Serializable
    typeParameters:
    - id: T
    content.vb: >-
      <JsonObject(MemberSerialization.OptIn)>

      Public Class PagedResponse(Of T)
          Inherits Serializable
  inheritance:
  - System.Object
  - libSimba.Net.Models.Transaction.Serializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  nameWithType.vb: PagedResponse(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T)
  name.vb: PagedResponse(Of T)
- uid: libSimba.Net.Models.PagedResponse`1.#ctor(System.String,libSimba.Net.Simba.SimbaBase)
  commentId: M:libSimba.Net.Models.PagedResponse`1.#ctor(System.String,libSimba.Net.Simba.SimbaBase)
  id: '#ctor(System.String,libSimba.Net.Simba.SimbaBase)'
  parent: libSimba.Net.Models.PagedResponse`1
  langs:
  - csharp
  - vb
  name: PagedResponse(String, SimbaBase)
  nameWithType: PagedResponse<T>.PagedResponse(String, SimbaBase)
  fullName: libSimba.Net.Models.PagedResponse<T>.PagedResponse(System.String, libSimba.Net.Simba.SimbaBase)
  type: Constructor
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: .ctor
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 22
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: protected PagedResponse(string url, SimbaBase simba)
    parameters:
    - id: url
      type: System.String
    - id: simba
      type: libSimba.Net.Simba.SimbaBase
    content.vb: Protected Sub New(url As String, simba As SimbaBase)
  overload: libSimba.Net.Models.PagedResponse`1.#ctor*
  nameWithType.vb: PagedResponse(Of T).PagedResponse(String, SimbaBase)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).PagedResponse(System.String, libSimba.Net.Simba.SimbaBase)
- uid: libSimba.Net.Models.PagedResponse`1.Count
  commentId: P:libSimba.Net.Models.PagedResponse`1.Count
  id: Count
  parent: libSimba.Net.Models.PagedResponse`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: PagedResponse<T>.Count
  fullName: libSimba.Net.Models.PagedResponse<T>.Count
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Count
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 32
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: >-
      [JsonProperty("count")]

      public int Count { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("count")>

      Public Property Count As Integer
  overload: libSimba.Net.Models.PagedResponse`1.Count*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: count
  nameWithType.vb: PagedResponse(Of T).Count
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Count
- uid: libSimba.Net.Models.PagedResponse`1.Data
  commentId: M:libSimba.Net.Models.PagedResponse`1.Data
  id: Data
  parent: libSimba.Net.Models.PagedResponse`1
  langs:
  - csharp
  - vb
  name: Data()
  nameWithType: PagedResponse<T>.Data()
  fullName: libSimba.Net.Models.PagedResponse<T>.Data()
  type: Method
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Data
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 38
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: public T[] Data()
    return:
      type: '{T}[]'
    content.vb: Public Function Data As T()
  overload: libSimba.Net.Models.PagedResponse`1.Data*
  nameWithType.vb: PagedResponse(Of T).Data()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Data()
- uid: libSimba.Net.Models.PagedResponse`1.CurrentPage
  commentId: M:libSimba.Net.Models.PagedResponse`1.CurrentPage
  id: CurrentPage
  parent: libSimba.Net.Models.PagedResponse`1
  langs:
  - csharp
  - vb
  name: CurrentPage()
  nameWithType: PagedResponse<T>.CurrentPage()
  fullName: libSimba.Net.Models.PagedResponse<T>.CurrentPage()
  type: Method
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: CurrentPage
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 43
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: public int CurrentPage()
    return:
      type: System.Int32
    content.vb: Public Function CurrentPage As Integer
  overload: libSimba.Net.Models.PagedResponse`1.CurrentPage*
  nameWithType.vb: PagedResponse(Of T).CurrentPage()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).CurrentPage()
- uid: libSimba.Net.Models.PagedResponse`1.Next(System.Threading.CancellationToken)
  commentId: M:libSimba.Net.Models.PagedResponse`1.Next(System.Threading.CancellationToken)
  id: Next(System.Threading.CancellationToken)
  parent: libSimba.Net.Models.PagedResponse`1
  langs:
  - csharp
  - vb
  name: Next(CancellationToken)
  nameWithType: PagedResponse<T>.Next(CancellationToken)
  fullName: libSimba.Net.Models.PagedResponse<T>.Next(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Next
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 53
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: public Task<PagedResponse<T>> Next(CancellationToken ct = default(CancellationToken))
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{libSimba.Net.Models.PagedResponse`1}
    content.vb: Public Function Next(ct As CancellationToken = Nothing) As Task(Of PagedResponse(Of T))
  overload: libSimba.Net.Models.PagedResponse`1.Next*
  nameWithType.vb: PagedResponse(Of T).Next(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Next(System.Threading.CancellationToken)
- uid: libSimba.Net.Models.PagedResponse`1.Previous(System.Threading.CancellationToken)
  commentId: M:libSimba.Net.Models.PagedResponse`1.Previous(System.Threading.CancellationToken)
  id: Previous(System.Threading.CancellationToken)
  parent: libSimba.Net.Models.PagedResponse`1
  langs:
  - csharp
  - vb
  name: Previous(CancellationToken)
  nameWithType: PagedResponse<T>.Previous(CancellationToken)
  fullName: libSimba.Net.Models.PagedResponse<T>.Previous(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/libSimba.Net/Models/PagedResponse.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Previous
    path: ../libSimba.Net/Models/PagedResponse.cs
    startLine: 81
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: public Task<PagedResponse<T>> Previous(CancellationToken ct = default(CancellationToken))
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{libSimba.Net.Models.PagedResponse`1}
    content.vb: Public Function Previous(ct As CancellationToken = Nothing) As Task(Of PagedResponse(Of T))
  overload: libSimba.Net.Models.PagedResponse`1.Previous*
  nameWithType.vb: PagedResponse(Of T).Previous(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Previous(System.Threading.CancellationToken)
references:
- uid: libSimba.Net.Models
  commentId: N:libSimba.Net.Models
  name: libSimba.Net.Models
  nameWithType: libSimba.Net.Models
  fullName: libSimba.Net.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: libSimba.Net.Models.Transaction.Serializable
  commentId: T:libSimba.Net.Models.Transaction.Serializable
  parent: libSimba.Net.Models.Transaction
  name: Serializable
  nameWithType: Serializable
  fullName: libSimba.Net.Models.Transaction.Serializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: libSimba.Net.Models.Transaction
  commentId: N:libSimba.Net.Models.Transaction
  name: libSimba.Net.Models.Transaction
  nameWithType: libSimba.Net.Models.Transaction
  fullName: libSimba.Net.Models.Transaction
- uid: libSimba.Net.Models.PagedResponse`1.#ctor*
  commentId: Overload:libSimba.Net.Models.PagedResponse`1.#ctor
  name: PagedResponse
  nameWithType: PagedResponse<T>.PagedResponse
  fullName: libSimba.Net.Models.PagedResponse<T>.PagedResponse
  nameWithType.vb: PagedResponse(Of T).PagedResponse
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).PagedResponse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: libSimba.Net.Simba.SimbaBase
  commentId: T:libSimba.Net.Simba.SimbaBase
  parent: libSimba.Net.Simba
  name: SimbaBase
  nameWithType: SimbaBase
  fullName: libSimba.Net.Simba.SimbaBase
- uid: libSimba.Net.Simba
  commentId: N:libSimba.Net.Simba
  name: libSimba.Net.Simba
  nameWithType: libSimba.Net.Simba
  fullName: libSimba.Net.Simba
- uid: libSimba.Net.Models.PagedResponse`1.Count*
  commentId: Overload:libSimba.Net.Models.PagedResponse`1.Count
  name: Count
  nameWithType: PagedResponse<T>.Count
  fullName: libSimba.Net.Models.PagedResponse<T>.Count
  nameWithType.vb: PagedResponse(Of T).Count
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: libSimba.Net.Models.PagedResponse`1.Data*
  commentId: Overload:libSimba.Net.Models.PagedResponse`1.Data
  name: Data
  nameWithType: PagedResponse<T>.Data
  fullName: libSimba.Net.Models.PagedResponse<T>.Data
  nameWithType.vb: PagedResponse(Of T).Data
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Data
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: libSimba.Net.Models.PagedResponse`1.CurrentPage*
  commentId: Overload:libSimba.Net.Models.PagedResponse`1.CurrentPage
  name: CurrentPage
  nameWithType: PagedResponse<T>.CurrentPage
  fullName: libSimba.Net.Models.PagedResponse<T>.CurrentPage
  nameWithType.vb: PagedResponse(Of T).CurrentPage
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).CurrentPage
- uid: libSimba.Net.Models.PagedResponse`1.Next*
  commentId: Overload:libSimba.Net.Models.PagedResponse`1.Next
  name: Next
  nameWithType: PagedResponse<T>.Next
  fullName: libSimba.Net.Models.PagedResponse<T>.Next
  nameWithType.vb: PagedResponse(Of T).Next
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Next
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{libSimba.Net.Models.PagedResponse`1}
  commentId: T:System.Threading.Tasks.Task{libSimba.Net.Models.PagedResponse`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<PagedResponse<T>>
  nameWithType: Task<PagedResponse<T>>
  fullName: System.Threading.Tasks.Task<libSimba.Net.Models.PagedResponse<T>>
  nameWithType.vb: Task(Of PagedResponse(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of libSimba.Net.Models.PagedResponse(Of T))
  name.vb: Task(Of PagedResponse(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: libSimba.Net.Models.PagedResponse`1
    name: PagedResponse
    nameWithType: PagedResponse
    fullName: libSimba.Net.Models.PagedResponse
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: libSimba.Net.Models.PagedResponse`1
    name: PagedResponse
    nameWithType: PagedResponse
    fullName: libSimba.Net.Models.PagedResponse
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: libSimba.Net.Models.PagedResponse`1.Previous*
  commentId: Overload:libSimba.Net.Models.PagedResponse`1.Previous
  name: Previous
  nameWithType: PagedResponse<T>.Previous
  fullName: libSimba.Net.Models.PagedResponse<T>.Previous
  nameWithType.vb: PagedResponse(Of T).Previous
  fullName.vb: libSimba.Net.Models.PagedResponse(Of T).Previous
