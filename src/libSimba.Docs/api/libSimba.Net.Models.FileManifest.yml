### YamlMime:ManagedReference
items:
- uid: libSimba.Net.Models.FileManifest
  commentId: T:libSimba.Net.Models.FileManifest
  id: FileManifest
  parent: libSimba.Net.Models
  children:
  - libSimba.Net.Models.FileManifest.MimeType
  - libSimba.Net.Models.FileManifest.Name
  - libSimba.Net.Models.FileManifest.Size
  langs:
  - csharp
  - vb
  name: FileManifest
  nameWithType: FileManifest
  fullName: libSimba.Net.Models.FileManifest
  type: Class
  source:
    remote:
      path: src/libSimba.Net/Models/FileManifest.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: FileManifest
    path: ../libSimba.Net/Models/FileManifest.cs
    startLine: 8
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  summary: "\nRepresents a Files manifest\n"
  example: []
  syntax:
    content: >-
      [JsonObject(MemberSerialization.OptIn)]

      public class FileManifest : Serializable
    content.vb: >-
      <JsonObject(MemberSerialization.OptIn)>

      Public Class FileManifest
          Inherits Serializable
  inheritance:
  - System.Object
  - libSimba.Net.Models.Transaction.Serializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: libSimba.Net.Models.FileManifest.Name
  commentId: P:libSimba.Net.Models.FileManifest.Name
  id: Name
  parent: libSimba.Net.Models.FileManifest
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FileManifest.Name
  fullName: libSimba.Net.Models.FileManifest.Name
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/FileManifest.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: Name
    path: ../libSimba.Net/Models/FileManifest.cs
    startLine: 11
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: >-
      [JsonProperty("name")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name")>

      Public Property Name As String
  overload: libSimba.Net.Models.FileManifest.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.FileManifest.MimeType
  commentId: P:libSimba.Net.Models.FileManifest.MimeType
  id: MimeType
  parent: libSimba.Net.Models.FileManifest
  langs:
  - csharp
  - vb
  name: MimeType
  nameWithType: FileManifest.MimeType
  fullName: libSimba.Net.Models.FileManifest.MimeType
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/FileManifest.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: MimeType
    path: ../libSimba.Net/Models/FileManifest.cs
    startLine: 13
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: >-
      [JsonProperty("mimetype")]

      public string MimeType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("mimetype")>

      Public Property MimeType As String
  overload: libSimba.Net.Models.FileManifest.MimeType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mimetype
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.FileManifest.Size
  commentId: P:libSimba.Net.Models.FileManifest.Size
  id: Size
  parent: libSimba.Net.Models.FileManifest
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: FileManifest.Size
  fullName: libSimba.Net.Models.FileManifest.Size
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/FileManifest.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: Size
    path: ../libSimba.Net/Models/FileManifest.cs
    startLine: 15
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models
  syntax:
    content: >-
      [JsonProperty("size")]

      public int Size { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("size")>

      Public Property Size As Integer
  overload: libSimba.Net.Models.FileManifest.Size*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: size
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: libSimba.Net.Models
  commentId: N:libSimba.Net.Models
  name: libSimba.Net.Models
  nameWithType: libSimba.Net.Models
  fullName: libSimba.Net.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: libSimba.Net.Models.Transaction.Serializable
  commentId: T:libSimba.Net.Models.Transaction.Serializable
  parent: libSimba.Net.Models.Transaction
  name: Serializable
  nameWithType: Serializable
  fullName: libSimba.Net.Models.Transaction.Serializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: libSimba.Net.Models.Transaction
  commentId: N:libSimba.Net.Models.Transaction
  name: libSimba.Net.Models.Transaction
  nameWithType: libSimba.Net.Models.Transaction
  fullName: libSimba.Net.Models.Transaction
- uid: libSimba.Net.Models.FileManifest.Name*
  commentId: Overload:libSimba.Net.Models.FileManifest.Name
  name: Name
  nameWithType: FileManifest.Name
  fullName: libSimba.Net.Models.FileManifest.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: libSimba.Net.Models.FileManifest.MimeType*
  commentId: Overload:libSimba.Net.Models.FileManifest.MimeType
  name: MimeType
  nameWithType: FileManifest.MimeType
  fullName: libSimba.Net.Models.FileManifest.MimeType
- uid: libSimba.Net.Models.FileManifest.Size*
  commentId: Overload:libSimba.Net.Models.FileManifest.Size
  name: Size
  nameWithType: FileManifest.Size
  fullName: libSimba.Net.Models.FileManifest.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
