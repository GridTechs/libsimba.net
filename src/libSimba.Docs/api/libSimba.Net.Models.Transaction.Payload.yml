### YamlMime:ManagedReference
items:
- uid: libSimba.Net.Models.Transaction.Payload
  commentId: T:libSimba.Net.Models.Transaction.Payload
  id: Payload
  parent: libSimba.Net.Models.Transaction
  children:
  - libSimba.Net.Models.Transaction.Payload.Inputs
  - libSimba.Net.Models.Transaction.Payload.Method
  - libSimba.Net.Models.Transaction.Payload.Raw
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Payload
  fullName: libSimba.Net.Models.Transaction.Payload
  type: Class
  source:
    remote:
      path: src/libSimba.Net/Models/Transaction/Payload.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: Payload
    path: ../libSimba.Net/Models/Transaction/Payload.cs
    startLine: 8
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Transaction
  summary: "\nPayload\n"
  example: []
  syntax:
    content: >-
      [JsonObject(MemberSerialization.OptIn)]

      public class Payload
    content.vb: >-
      <JsonObject(MemberSerialization.OptIn)>

      Public Class Payload
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: libSimba.Net.Models.Transaction.Payload.Raw
  commentId: P:libSimba.Net.Models.Transaction.Payload.Raw
  id: Raw
  parent: libSimba.Net.Models.Transaction.Payload
  langs:
  - csharp
  - vb
  name: Raw
  nameWithType: Payload.Raw
  fullName: libSimba.Net.Models.Transaction.Payload.Raw
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Transaction/Payload.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: Raw
    path: ../libSimba.Net/Models/Transaction/Payload.cs
    startLine: 11
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Transaction
  syntax:
    content: >-
      [JsonProperty("raw")]

      public RawPayload Raw { get; set; }
    parameters: []
    return:
      type: libSimba.Net.Models.Transaction.RawPayload
    content.vb: >-
      <JsonProperty("raw")>

      Public Property Raw As RawPayload
  overload: libSimba.Net.Models.Transaction.Payload.Raw*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: raw
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Transaction.Payload.Inputs
  commentId: P:libSimba.Net.Models.Transaction.Payload.Inputs
  id: Inputs
  parent: libSimba.Net.Models.Transaction.Payload
  langs:
  - csharp
  - vb
  name: Inputs
  nameWithType: Payload.Inputs
  fullName: libSimba.Net.Models.Transaction.Payload.Inputs
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Transaction/Payload.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: Inputs
    path: ../libSimba.Net/Models/Transaction/Payload.cs
    startLine: 13
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Transaction
  syntax:
    content: >-
      [JsonProperty("inputs")]

      public Dictionary<string, string> Inputs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: >-
      <JsonProperty("inputs")>

      Public Property Inputs As Dictionary(Of String, String)
  overload: libSimba.Net.Models.Transaction.Payload.Inputs*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: inputs
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Transaction.Payload.Method
  commentId: P:libSimba.Net.Models.Transaction.Payload.Method
  id: Method
  parent: libSimba.Net.Models.Transaction.Payload
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: Payload.Method
  fullName: libSimba.Net.Models.Transaction.Payload.Method
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Transaction/Payload.cs
      branch: master
      repo: git@github.com:SIMBAChain/libsimba.net.git
    id: Method
    path: ../libSimba.Net/Models/Transaction/Payload.cs
    startLine: 15
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Transaction
  syntax:
    content: >-
      [JsonProperty("method")]

      public string Method { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("method")>

      Public Property Method As String
  overload: libSimba.Net.Models.Transaction.Payload.Method*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: method
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: libSimba.Net.Models.Transaction
  commentId: N:libSimba.Net.Models.Transaction
  name: libSimba.Net.Models.Transaction
  nameWithType: libSimba.Net.Models.Transaction
  fullName: libSimba.Net.Models.Transaction
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: libSimba.Net.Models.Transaction.Payload.Raw*
  commentId: Overload:libSimba.Net.Models.Transaction.Payload.Raw
  name: Raw
  nameWithType: Payload.Raw
  fullName: libSimba.Net.Models.Transaction.Payload.Raw
- uid: libSimba.Net.Models.Transaction.RawPayload
  commentId: T:libSimba.Net.Models.Transaction.RawPayload
  parent: libSimba.Net.Models.Transaction
  name: RawPayload
  nameWithType: RawPayload
  fullName: libSimba.Net.Models.Transaction.RawPayload
- uid: libSimba.Net.Models.Transaction.Payload.Inputs*
  commentId: Overload:libSimba.Net.Models.Transaction.Payload.Inputs
  name: Inputs
  nameWithType: Payload.Inputs
  fullName: libSimba.Net.Models.Transaction.Payload.Inputs
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: libSimba.Net.Models.Transaction.Payload.Method*
  commentId: Overload:libSimba.Net.Models.Transaction.Payload.Method
  name: Method
  nameWithType: Payload.Method
  fullName: libSimba.Net.Models.Transaction.Payload.Method
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
