### YamlMime:ManagedReference
items:
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata
  commentId: T:libSimba.Net.Models.Swagger.ApplicationMetadata
  id: ApplicationMetadata
  parent: libSimba.Net.Models.Swagger
  children:
  - libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet
  - libSimba.Net.Models.Swagger.ApplicationMetadata.Methods
  - libSimba.Net.Models.Swagger.ApplicationMetadata.Name
  - libSimba.Net.Models.Swagger.ApplicationMetadata.Network
  - libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType
  - libSimba.Net.Models.Swagger.ApplicationMetadata.POA
  - libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet
  - libSimba.Net.Models.Swagger.ApplicationMetadata.Type
  langs:
  - csharp
  - vb
  name: ApplicationMetadata
  nameWithType: ApplicationMetadata
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata
  type: Class
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: ApplicationMetadata
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 9
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  summary: "\nApplicationMetadata\n"
  example: []
  syntax:
    content: >-
      [JsonObject(MemberSerialization.OptIn)]

      public class ApplicationMetadata : Serializable
    content.vb: >-
      <JsonObject(MemberSerialization.OptIn)>

      Public Class ApplicationMetadata
          Inherits Serializable
  inheritance:
  - System.Object
  - libSimba.Net.Models.Transaction.Serializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Newtonsoft.Json.JsonObjectAttribute
    ctor: Newtonsoft.Json.JsonObjectAttribute.#ctor(Newtonsoft.Json.MemberSerialization)
    arguments:
    - type: Newtonsoft.Json.MemberSerialization
      value: 1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Name
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.Name
  id: Name
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ApplicationMetadata.Name
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Name
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Name
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 12
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("name")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name")>

      Public Property Name As String
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Network
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.Network
  id: Network
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: Network
  nameWithType: ApplicationMetadata.Network
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Network
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Network
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 14
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("network")]

      public string Network { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("network")>

      Public Property Network As String
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.Network*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: network
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType
  id: NetworkType
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: NetworkType
  nameWithType: ApplicationMetadata.NetworkType
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: NetworkType
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 16
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("network_type")]

      public string NetworkType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("network_type")>

      Public Property NetworkType As String
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: network_type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.POA
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.POA
  id: POA
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: POA
  nameWithType: ApplicationMetadata.POA
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.POA
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: POA
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 18
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("poa")]

      public bool POA { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("poa")>

      Public Property POA As Boolean
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.POA*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: poa
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet
  id: SimbaFaucet
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: SimbaFaucet
  nameWithType: ApplicationMetadata.SimbaFaucet
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: SimbaFaucet
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 20
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("simba_faucet")]

      public bool SimbaFaucet { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("simba_faucet")>

      Public Property SimbaFaucet As Boolean
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: simba_faucet
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Type
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.Type
  id: Type
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ApplicationMetadata.Type
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Type
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Type
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 22
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("type")]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public Property Type As String
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet
  id: Faucet
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: Faucet
  nameWithType: ApplicationMetadata.Faucet
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Faucet
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 24
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("faucet")]

      public string Faucet { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("faucet")>

      Public Property Faucet As String
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: faucet
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Methods
  commentId: P:libSimba.Net.Models.Swagger.ApplicationMetadata.Methods
  id: Methods
  parent: libSimba.Net.Models.Swagger.ApplicationMetadata
  langs:
  - csharp
  - vb
  name: Methods
  nameWithType: ApplicationMetadata.Methods
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Methods
  type: Property
  source:
    remote:
      path: src/libSimba.Net/Models/Swagger/ApplicationMetadata.cs
      branch: master
      repo: git@github.com:ITAMCO/libsimba.net.git
    id: Methods
    path: ../libSimba.Net/Models/Swagger/ApplicationMetadata.cs
    startLine: 26
  assemblies:
  - libSimba.Net
  namespace: libSimba.Net.Models.Swagger
  syntax:
    content: >-
      [JsonProperty("methods")]

      public Dictionary<string, Method> Methods { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,libSimba.Net.Models.Swagger.Method}
    content.vb: >-
      <JsonProperty("methods")>

      Public Property Methods As Dictionary(Of String, Method)
  overload: libSimba.Net.Models.Swagger.ApplicationMetadata.Methods*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: methods
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: libSimba.Net.Models.Swagger
  commentId: N:libSimba.Net.Models.Swagger
  name: libSimba.Net.Models.Swagger
  nameWithType: libSimba.Net.Models.Swagger
  fullName: libSimba.Net.Models.Swagger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: libSimba.Net.Models.Transaction.Serializable
  commentId: T:libSimba.Net.Models.Transaction.Serializable
  parent: libSimba.Net.Models.Transaction
  name: Serializable
  nameWithType: Serializable
  fullName: libSimba.Net.Models.Transaction.Serializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: libSimba.Net.Models.Transaction
  commentId: N:libSimba.Net.Models.Transaction
  name: libSimba.Net.Models.Transaction
  nameWithType: libSimba.Net.Models.Transaction
  fullName: libSimba.Net.Models.Transaction
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Name*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.Name
  name: Name
  nameWithType: ApplicationMetadata.Name
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Network*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.Network
  name: Network
  nameWithType: ApplicationMetadata.Network
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Network
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType
  name: NetworkType
  nameWithType: ApplicationMetadata.NetworkType
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.NetworkType
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.POA*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.POA
  name: POA
  nameWithType: ApplicationMetadata.POA
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.POA
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet
  name: SimbaFaucet
  nameWithType: ApplicationMetadata.SimbaFaucet
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.SimbaFaucet
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Type*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.Type
  name: Type
  nameWithType: ApplicationMetadata.Type
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Type
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet
  name: Faucet
  nameWithType: ApplicationMetadata.Faucet
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Faucet
- uid: libSimba.Net.Models.Swagger.ApplicationMetadata.Methods*
  commentId: Overload:libSimba.Net.Models.Swagger.ApplicationMetadata.Methods
  name: Methods
  nameWithType: ApplicationMetadata.Methods
  fullName: libSimba.Net.Models.Swagger.ApplicationMetadata.Methods
- uid: System.Collections.Generic.Dictionary{System.String,libSimba.Net.Models.Swagger.Method}
  commentId: T:System.Collections.Generic.Dictionary{System.String,libSimba.Net.Models.Swagger.Method}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Method>
  nameWithType: Dictionary<String, Method>
  fullName: System.Collections.Generic.Dictionary<System.String, libSimba.Net.Models.Swagger.Method>
  nameWithType.vb: Dictionary(Of String, Method)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, libSimba.Net.Models.Swagger.Method)
  name.vb: Dictionary(Of String, Method)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: libSimba.Net.Models.Swagger.Method
    name: Method
    nameWithType: Method
    fullName: libSimba.Net.Models.Swagger.Method
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: libSimba.Net.Models.Swagger.Method
    name: Method
    nameWithType: Method
    fullName: libSimba.Net.Models.Swagger.Method
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
